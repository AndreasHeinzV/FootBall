<?php

declare(strict_types=1);

namespace App\Tests\Unit\Validation\Login;

use App\Components\UserLogin\Business\Model\ValidationTypesLogin\EmailLoginValidation;
use App\Components\UserLogin\Persistence\DTO\UserLoginDto;
use PHPUnit\Framework\TestCase;

class EmailValidationTest extends TestCase
{

    private EmailLoginValidation $validation;

    private UserLoginDto $userLoginDto;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->validation = new EmailLoginValidation();
        $this->userLoginDto = new UserLoginDto();
    }

    public function testEmailValidationValidMail(): void{

        $this->userLoginDto->email = 'wagah@gmail.com';
        $result = $this->validation->validateInput($this->userLoginDto);
        self::assertNull($result);
    }

    public function testEmailValidationInvalidMail(): void
    {
        $this->userLoginDto->email = 'wagah';
        $result = $this->validation->validateInput($this->userLoginDto);
        self::assertIsString($result);
        self::assertSame('Invalid email address.', $result);
    }

    public function testEmailValidationEmptyMail(): void
    {
        $result = $this->validation->validateInput($this->userLoginDto);
        self::assertIsString($result);
        self::assertSame('Email is empty.', $result);
    }
}